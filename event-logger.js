// Generated by CoffeeScript 1.6.2
var getStartOfOccupation, occupationsPerHour;

occupationsPerHour = function(floor, room) {
  var d;

  d = new Date();
  return {
    floor: floor,
    room: room,
    year: d.getFullYear(),
    month: d.getMonth(),
    day: d.getDate(),
    hour: d.getHours()
  };
};

getStartOfOccupation = function(event, Event, callback) {
  return Event.findOne({
    'floor': event.floor,
    'room': event.room,
    'status': 1
  }, {}, {
    sort: {
      'time': -1
    }
  }).exec(function(err, event) {
    if (err != null) {
      return false;
    }
    return callback(event.time);
  });
};

exports.logEvent = function(event, req, res, Event, FloorStats, Visits) {
  event.save(function(err) {
    if (err != null) {
      res.statusCode = 400;
      return res.send("Error");
    } else {
      res.statusCode = 200;
      return res.send(event);
    }
  });
  if (parseInt(event.status) === 1) {
    return FloorStats.update(occupationsPerHour(event.floor, event.room), {
      $inc: {
        occupations: 1
      }
    }, {
      upsert: true
    }, function(err) {});
  } else {
    return getStartOfOccupation(event, Event, function(response) {
      var diff, endOfOccupation, startOfOccupation, timeObject, visit, visitData;

      endOfOccupation = event.time;
      startOfOccupation = response;
      diff = new Date(endOfOccupation - startOfOccupation).getTime();
      timeObject = occupationsPerHour(event.floor, event.room);
      FloorStats.update(timeObject, {
        $inc: {
          duration: diff
        }
      }, {
        upsert: true
      }, function(err) {});
      visitData = timeObject;
      visitData.duration = diff;
      visit = new Visits(visitData);
      return visit.save();
    });
  }
};
