// Generated by CoffeeScript 1.6.2
'use strict';angular.module('gottaGo.controllers', ['ngResource']).controller('GGMainCtrl', function($scope, Status, Que, roomNames, $timeout) {
  var getQue, isDifferent;

  $scope.floorsArray = [];
  $scope.que = [];
  $scope.floor = {};
  $scope.notify = {};
  $scope.milliseconds = function(stamp) {
    debugger;    return Date.parse(stamp).getTime();
  };
  $scope.getRoomNames = function(floor, room) {
    return roomNames[floor + room];
  };
  getQue = function() {
    var floor, _i, _len, _ref, _results;

    $scope.que = ["0"];
    _ref = $scope.floorsArray;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      floor = _ref[_i];
      _results.push(Que.get(floor[0].floor).success(function(response) {
        return $scope.que.push(response.length);
      }));
    }
    return _results;
  };
  Status.get().success(function(response) {
    isDifferent(response);
    return getQue();
  });
  setInterval(function() {
    return Status.get().success(function(response) {
      isDifferent(response);
      return getQue();
    });
  }, 2000);
  isDifferent = function(newData) {
    var floor, floorIndex, room, roomIndex, _i, _j, _len, _len1, _ref;

    if ($scope.floorsArray.length === 0) {
      $scope.floorsArray = newData;
      return;
    }
    _ref = $scope.floorsArray;
    for (floorIndex = _i = 0, _len = _ref.length; _i < _len; floorIndex = ++_i) {
      floor = _ref[floorIndex];
      for (roomIndex = _j = 0, _len1 = floor.length; _j < _len1; roomIndex = ++_j) {
        room = floor[roomIndex];
        if (room.time !== newData[floorIndex][roomIndex].time) {
          $scope.floorsArray = newData;
          $scope.notify[2] = '';
          return;
        }
      }
    }
  };
  return $scope.addToQue = function(floor, contact) {
    return Que.post(floor, {
      contact: contact
    }).success(function(response) {
      $scope.notify[floor] = 'qued';
      return getQue();
    });
  };
});
